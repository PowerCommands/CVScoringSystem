<MudSelect T="string" @bind-Value="@_selectedCategory" Label="Test category" Variant="Variant.Outlined" HelperText="Uncategorised" Placeholder="Uncategorised"  IconSize="Size.Large">
    @foreach (var category in _categories)
    {
        <MudSelectItem Value="@category">
            <MudChip Style="height: 24px;" Color="Color.Primary" @onclick="@(() => OnSelectedValueChanged(category))">@category</MudChip>
        </MudSelectItem>
    }
</MudSelect>

@code {

    string _selectedCategory = "Uncategorised";

    [Parameter]
    public EventCallback<string> OnItemSelected { get; set; }

    readonly IEnumerable<string> _categories = new[] {"Uncategorised","4.2 Configuration and Deployment Management Testing","4.3 Identity Management Testing","4.4 Authentication Testing","4.5 Authorization Testing","4.6 Session Management Testing","4.7 Input Validation Testing","4.8 Testing for Error Handling","4.9 Testing for Weak Cryptography","4.10 Business Logic Testing","4.11 Client-Side Testing","4.12 API Testing"};
    
    private async void OnSelectedValueChanged(string selected) => await OnItemSelected.InvokeAsync(selected);
}