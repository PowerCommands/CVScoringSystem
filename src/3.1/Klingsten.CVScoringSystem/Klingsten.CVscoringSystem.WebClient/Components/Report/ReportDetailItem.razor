@using Klingsten.CVScoringSystem.Shared.Managers
@using Klingsten.CVscoringSystem.WebClient.Extensions
@inject IScorecardService ScorecardService

<h2>@Vulnerability.TestCategory.Replace("#","")</h2>
<h2>@Vulnerability.Name.Replace("#","")</h2>
<p>@Vulnerability.Description.Replace("#","")</p><br/>
<p>
    <b>Base score:</b> @_scoreResult.ScoreDetail.BaseScore<br />
    <b>Temporal score:</b> @_scoreResult.ScoreDetail.TemporalScore<br />
    <b>Environment score:</b> @_scoreResult.ScoreDetail.EnvironmentScore<br />
</p>
<br/>
<p>
    <h2>Overall rating</h2>
    <ScoreChip SeverityColor="@_scoreResult.EnviromentalSeverityRating.ToMudBlazorColor()" Score="@_score"></ScoreChip>
    <h2>Base rating </h2>
    <ScoreChip SeverityColor="@_scoreResult.BaseSeverityRating.ToMudBlazorColor()" Score="@_basicScore"></ScoreChip>
</p>
<p>
    <b>CVSS 3.1 vector</b><br/>
    @Vulnerability.VectorString<br />
</p>
<br/>

@code {

    ScoreResult _scoreResult = new() {BaseSeverityRating = SeverityRating.None, EnviromentalSeverityRating = SeverityRating.None, ScoreDetail = new ScoreDetail {BaseScore = 0, EnvironmentScore = 0}};
    bool _isLoading;
    string _score = "";
    string _basicScore = "";

    [Parameter]
    public Vulnerability Vulnerability { get; set; } = new() { Name = "-", Description = "-" };

    protected override void OnInitialized()
    {
        var scoreCards = ScorecardService.GetScoreCards().ToList();
        var calculator = new ScoreCalculatorManager(scoreCards);
        _scoreResult = calculator.GetScoreResult(Vulnerability.VectorString);
        _basicScore = _scoreResult.ScoreDetail.BaseScore.ToSeverityRatingDisplayText();
        _score = _scoreResult.ScoreDetail.EnvironmentScore.ToSeverityRatingDisplayText();
        StateHasChanged();
    }

}