@inject IReportService ReportService
@inject IStateService StateService
@inject IEventService EventService

<h3>Add current vulnerability to report</h3>
<TestCategorySelector OnItemSelected="OnTestCategorySelected"></TestCategorySelector>
<CommonVulnerabilitiesSelector OnItemSelected="OnVulnerabillitySelected"></CommonVulnerabilitiesSelector>

<MudTextField @bind-Value="@_name" Label="Name" Variant="Variant.Text" HelperText="Name"></MudTextField>
<MudTextField @bind-Value="@_description" Label="Description" Variant="Variant.Text" HelperText="Description"></MudTextField>
<MudTextField @bind-Value="@VectorString" Label="VectorString" ReadOnly="true" Variant="Variant.Text" />
<MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Create" Color="Color.Primary" OnClick="OnClickAddToReport" Disabled="@_buttonDisabled">Add</MudButton>
<AlertDialog @ref="_alertDialog"></AlertDialog>


@code {

    string _name = "";
    string _description = "";
    string _category = "Uncategorised";
    bool _buttonDisabled = true;
    
    AlertDialog? _alertDialog;

    [Parameter]
    public string VectorString { get; set; } = "";

    protected override void OnInitialized() => EventService.ScoreCardCompleted += _ => _buttonDisabled = false;

    private async void OnClickAddToReport()
    {
        var vulnerability = new Vulnerability {Description = _description, Name = _name, VectorString = VectorString, TestCategory = _category, Score = StateService.CurrentScore };
        var result = await ReportService.Add(vulnerability);
        if (result)
        {
            _alertDialog?.ShowSuccess($"{nameof(Vulnerability)} added to report.");
            _name = "";
            _description = "";
            EventService.OnVulnerabillityAddedToReport(vulnerability);
        }
        else
        {
            _alertDialog?.ShowError("Something went wrong...");
        }
        StateHasChanged();
    }

    private void OnTestCategorySelected(string category) => _category = category;
    private void OnVulnerabillitySelected(string vulnerabillity) => _name = vulnerabillity;

}